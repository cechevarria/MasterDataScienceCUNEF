#Eliminamos las semanas de 1963
cOmit = 16
#Dara Size
nObsColgate=length(zcolgate)
nObsCrest= length(zcrest)
#Sub_sample: para hacer el forecast
oColgate <- window(zcolgate,start=index(zcolgate[1]),end=index(zcolgate[nObsColgate-cOmit]))
oCrest <- window(zcrest,start=index(zcrest[1]),end=index(zcrest[nObsCrest-cOmit]))
View(oColgate)
library(tsoutliers)
install.packages("tsoutliers")
library(tsoutliers)
colgate_outlier<-tso(oColgate, types = c("TC","AO","LS","IO","SLS"))
colgate_outlier<-tso(oColgate, types = c("TC","AO","LS","IO","SLS")))
colgate_outlier<-tso(oColgate, types = c("TC","AO","LS","IO","SLS"))
colgate_outlier<-tso(oColgate, types = c("TC","AO","LS","IO","SLS")))
colgate_outlier<-tso(zcolgate, types = c("TC","AO","LS","IO","SLS")))
colgate_outlier<-tso(xcolgate, types = c("TC","AO","LS","IO","SLS")))
colgate_outlier<-tso(xcolgate, types = c("TC","AO","LS","IO","SLS"))
plot(colgate_outlier)
colgate_outlier<-tso(xcolgate, types = c("TC","AO","LS","IO","SLS"))
plot(colgate_outlier)
crest_outlier<-tso(xcrest, types = c("TC", "AO", "LS", "IO","SLS"))
plot(crest_outlier)
I135=1*(seq(oCrest)==135))   #En vez de 69, 135
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135))
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135))   #En vez de 69, 135
View(datos)
View(crest_outlier)
View(fCrest.arima)
View(datos)
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==276)), method='ML')
library(openxlsx)
library(skimr)
library(fpp2)
library(ggplot2)
library(zoo)
library(ggfortify)
require(forecast)
require(xts)
library(readr)
library(tidyverse)
library(dplyr)
library(tsoutliers)
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==276)), method='ML')
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==276)), method='ML')
install.packages("TSA")
library(TSA)
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==276)), method='ML')
View(fit1)
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==276)), method="ML")
AB1963 = 1*(seq(oCrest)==276)), method = c("CSS-ML","ML","CSS")
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==275)), method = c("CSS-ML","ML","CSS")
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==275)), method = c("CSS-ML","ML","CSS")
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==275)), method = c("CSS-ML","ML","CSS"))
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==275)), method = c("CSS-ML","ML","CSS"))
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(oCrest)==135),
AB1963 = 1*(seq(oCrest)==275)), method = "ML")
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(datos$Date)==135),
AB1963 = 1*(seq(datos$Date)==275)), method = "ML")
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0)),
xreg= data.frame(AG1960 = 1*(seq(datos$Year)==135),
AB1963 = 1*(seq(datos$Year)==275)), method = "ML")
air.m1<-arimax(log(oCrest),order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52),
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(3,0),c(0,0))
xreg= data.frame(AG1960 = 1*(seq(datos$Year)==135),
crest.m1 <- arimax(as.double(zCrest), order = c(0,1,1),
xtransf=data.frame(step_AGO_sem1_60 = 1*(seq(zCrest) > 135),
pulse_AGO_sem1_60 = 1*(seq(zCrest) == 135)),
xreg = data.frame(AGO_sem1_60 = 1*(seq(zCrest) == 136)),
transfer=list(c(3,0),c(0,0)),
method='ML')
crest.m1 <- arimax(as.double(zcrest), order = c(0,1,1),
xtransf=data.frame(step_AGO_sem1_60 = 1*(seq(zcrest) > 135),
pulse_AGO_sem1_60 = 1*(seq(zcrest) == 135)),
xreg = data.frame(AGO_sem1_60 = 1*(seq(zcrest) == 136)),
transfer=list(c(3,0),c(0,0)),
method='ML')
crest.m1
crest.m1 <- arimax(as.double(zcrest), order = c(3,1,0),
seasonal = list(order=c(1,0,0), period=52),
xtransf=data.frame(step_AGO_sem1_60 = 1*(seq(zcrest) > 135),
pulse_AGO_sem1_60 = 1*(seq(zcrest) == 135)),
xreg = data.frame(AGO_sem1_60 = 1*(seq(zcrest) == 136)),
transfer=list(c(3,0),c(0,0)),
method='ML')
crest.m1
crest.m1 <- arimax(as.double(zcrest), order = c(3,1,0),
seasonal = list(order=c(1,0,0), period=52),
xtransf=data.frame(step_AGO_sem1_60 = 1*(seq(zcrest) > 135),
pulse_AGO_sem1_60 = 1*(seq(zcrest) == 135)),
xreg = data.frame(AGO_sem1_60 = 1*(seq(zcrest) == 136)),
transfer=list(c(0,0)),
method='ML')
crest.m1
crest.m1$coef
crest.m1$coef
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.14344),
frequency = 52, start = 1958),type = 'h', ylab='efecto'
abline(h=0)
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.14344),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
abline(h=0)
step_AGO_sem1_60 = 1*(seq(zcrest) == 135)
plot(ts(step_AGO_sem1_60*(0.14344),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
abline(h=0)
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.14344),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
abline(h=0)
step_AGO_sem1_60 = 1*(seq(zcrest) = 135)
step_AGO_sem1_60 = 1*(seq(zcrest) == 135)
plot(ts(step_AGO_sem1_60*(0.14344),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
abline(h=0)
crest.m1 <- arimax(as.double(zcrest), order = c(3,1,0),
seasonal = list(order=c(1,0,0), period=52),
xtransf=data.frame(step_AGO_sem1_60 = 1*(seq(zcrest) > 135),
pulse_AGO_sem1_60 = 1*(seq(zcrest) == 135)),
xreg = data.frame(AGO_sem1_60 = 1*(seq(zcrest) == 136)),
transfer=list(c(0,0),c(1,0)),
method='ML')
crest.m1
crest.m1$coef
step_AGO_sem1_60 = 1*(seq(zcrest) == 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
filter(step_AGO_sem1_60,filter=.0046,method='recursive',side=1)*(0.04102),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
step_AGO_sem1_60 = 1*(seq(zcrest) == 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
filter(step_AGO_sem1_60,filter=0.0046,method='recursive',side=1)*(0.04102),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
step_AGO_sem1_60 = 1*(seq(zcrest) == 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
filter(step_AGO_sem1_60,0.0046,method='recursive',side=1)*(0.04102),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
step_AGO_sem1_60 = 1*(seq(zcrest) == 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
(step_AGO_sem1_60,filter=0.0046,method='recursive',side=1)*(0.04102),
step_AGO_sem1_60 = 1*(seq(zcrest) == 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
(filter=0.0046,method='recursive',side=1)*(0.04102),
step_AGO_sem1_60 = 1*(seq(zcrest) == 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
filter(step_AGO_sem1_60,filter=0.0046,method='recursive',side=1)*(0.04102),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
filter(step_AGO_sem1_60,filter=0.0046,method='recursive',side=1)*(0.04102),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
filter(step_AGO_sem1_60,filter=0.0046,method='recursive',side=1)*(0.04102),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
filter(step_AGO_sem1_60,filter=.0046,method='recursive',side=1)*(0.04102),
frequency = 52, start = 1958),type = 'h', ylab='efecto')
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
(0.0046,method='recursive',side=1)*(0.04102),
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
(0.0046,method='recursive',side=1)*(0.04102),
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
(0.0046, method='recursive',side=1)*(0.04102),
step_AGO_sem1_60 = 1*(seq(zcrest) > 135)
plot(ts(step_AGO_sem1_60*(0.1594)+
(0.0046, method='recursive')*(0.04102),
fit1<-auto.arima(oColgate)
summary(fit1)
fit1<-auto.arima(oColgate, lambda = 0)
summary(fit1)
fit2<-auto.arima(log(oCrest), lambda = 0)
fit2<-auto.arima(oCrest, lambda = 0)
summary(fit2)
oCrest_log<- log(oCrest)
fit3<-auto.arima(oCrest_log, lambda = 0)
oCrest_log<- log(oCrest)
fit3<-auto.arima(oCrest_log, lambda = 0)
fit3<-auto.arima(oCrest_log, lambda = 0)
fit3<-auto.arima(oCrest_log)
summary(fit3)
fit2<-auto.arima(oCrest, lambda = 0)
summary(fit2)
colgate.m1<-arimax(datos$Colgate,order=c(0,1,1),method = "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
colgate.m1<-arimax(oColgate,order=c(0,1,1),method = "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
colgate.m1
colgate.m1<-arimax(zcolgate,order=c(0,1,1),method = "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
colgate.m1<-arimax(ocolgate,order=c(0,1,1),method = "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
colgate.m1<-arimax(oColgate,order=c(0,1,1),method = "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
colgate.m1
pulse.ADA = col_integer()
View(fit3)
View(pulse.ADA)
step.ADA= col_integer()
plot(datos$pulse.ADA)
colgate.m1<-arimax(oColgate,order=c(0,1,1),method = "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
colgate.m1
colgate.m1<-arimax(oColgate,order=c(0,1,1),method = "ML",
xtransf= data.frame(I135=1*(seq(oColgate)==135),
I135=1*(seq(oColgate)==135)),
transfer=list(c(2,0),c(0,0)))
colgate.m1
colgate.m1<-arimax(oColgate,order=c(0,1,1),method = "ML",
xtransf= data.frame(I135=1*(seq(oColgate)==135),
I135=1*(seq(oColgate)==135)),
transfer=list(c(2,0),c(0,0)))
colgate.m1
crest.m1<-arimax(oCrest), order=c(3,1,0),
crest.m1<-arimax(oCrest, order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52), method= "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
crest.m1<-arimax(oCrest, order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52), method= "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
crest.m1
colgate.m1$coef
efectoColgate = 1*seq(oColgate)==135
efectoColgate = 1*seq(oColgate)==135
plot(ts(efectoColgate*(0.00143)+
filter(efectoColgate, filter=0.0002, method='recursive',side=1)*(0.00156),
frequency = 52, start = 1958), type = 'h', ylab = 'efecto')
efectoColgate = 1*(seq(oColgate)==135)
plot(ts(efectoColgate*(0.00143)+
filter(efectoColgate, filter=0.0002, method='recursive',side=1)*(0.00156),
frequency = 52, start = 1958), type = 'h', ylab = 'efecto')
efectoColgate = 1*(seq(oColgate)==135)
plot(ts(efectoColgate*(0.00143)+
(efectoColgate, filter=0.0002, method='recursive',side=1)*(0.00156),
efectoColgate = 1*(seq(oColgate)==135)
plot(ts(efectoColgate*(0.00143)+
(0.0002, method='recursive',side=1)*(0.00156),
crest.m1$coef
plot(crest.m1$coef[5:8], type = "h")
plot(crest.m1$coef[5:8], type = "h")
plot(colgate.m1$coef[2:5],type="h")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(skimr)
library(fpp2)
library(ggplot2)
library(zoo)
library(ggfortify)
require(forecast)
require(xts)
library(readr)
library(tidyverse)
library(dplyr)
library(tsoutliers)
library(TSA)
datos<-read.xlsx("data/data.xlsx")
datos$Date <- as.Date(paste(datos$Year, datos$Week, 1, sep = "-"), "%Y-%U-%u")
arimax
#dividimos la serie en 2 y conversion en datos
xcolgate <- ts(datos$Colgate, start = 1958, frequency = 52)
xcrest <- ts(datos$Crest, start = 1958, frequency = 52)
#conversion de datos
#Transformamos a zoo
zcolgate<-as.zoo(xcolgate)
zcrest<-as.zoo(xcrest)
names(zcolgate)<-"Colgate"
names(zcrest)<-"Crest"
view(zcolgate)
#Plot serie
autoplot(zcolgate)+ggtitle("Cuota de mercado")+ xlab("Semanas") + ylab("Colgate")
autoplot(zcrest)+ggtitle("Cuota de mercado")+ xlab("Semanas") + ylab("Crest")
#Seleccion del numero de observaciones para comparar la prediccion
#Eliminamos las semanas de 1963
cOmit = 16
#Dara Size
nObsColgate=length(zcolgate)
nObsCrest= length(zcrest)
#Sub_sample: para hacer el forecast
oColgate <- window(zcolgate,start=index(zcolgate[1]),end=index(zcolgate[nObsColgate-cOmit]))
oCrest <- window(zcrest,start=index(zcrest[1]),end=index(zcrest[nObsCrest-cOmit]))
View(oColgate)
#Diferencia para hacerlo estacionario en media para colgate
ggtsdisplay(diff(zcolgate))
zcrest_log<-log(zcrest)
#Se ha aplicado para crest logaritmos y diferencia en media
ggtsdisplay(diff(zcrest_log))
fit1<-auto.arima(oColgate, lambda = 0)
summary(fit1)
fit2<-auto.arima(oCrest, lambda = 0)
summary(fit2)
#Residuos colgate
ggtsdisplay(fit1$residuals)
#Residuos crest
ggtsdisplay(fit2$residuals)
fColgate.arima<-forecast(fit1)
df_new <- data.frame(value = as.vector(zcolgate), time = time(zcolgate))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fColgate.arima,alpha=0.4)+xlab("Fecha")+ylab("Colgate")+ggtitle("ARIMA: Predicción Colgate") + theme_bw()
fColgate.arima
fCrest.arima<-forecast(fit2)
df_new <- data.frame(value = as.vector(zcrest), time = time(zcrest))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fCrest.arima,alpha=0.4)+xlab("Fecha")+ylab("Crest")+ggtitle("ARIMA: Predicción Crest") + theme_bw()
fCrest.arima
colgate_outlier<-tso(xcolgate, types = c("TC","AO","LS","IO","SLS"))
plot(colgate_outlier)
crest_outlier<-tso(xcrest, types = c("TC", "AO", "LS", "IO","SLS"))
plot(crest_outlier)
colgate.m1<-arimax(oColgate,order=c(0,1,1),method = "ML",
xtransf= data.frame(I135=1*(seq(oColgate)==135),
I135=1*(seq(oColgate)==135)),
transfer=list(c(2,0),c(0,0)))
colgate.m1
colgate.m1$coef
crest.m1<-arimax(oCrest, order=c(3,1,0),
seasonal=list(order=c(1,0,0),period=52), method= "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
crest.m1
crest.m1$coef
plot(crest.m1$coef[5:8], type = "h")
plot(colgate.m1$coef[2:5],type="h")
fit2<-auto.arima(oCrest, lambda = "auto")
summary(fit2)
fit2<-auto.arima(oCrest, lambda = "auto")
summary(fit2)
fit1<-auto.arima(oColgate, lambda = 0)
summary(fit1)
#Residuos colgate
ggtsdisplay(fit1$residuals)
fColgate.arima<-forecast(fit1)
df_new <- data.frame(value = as.vector(zcolgate), time = time(zcolgate))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fColgate.arima,alpha=0.4)+xlab("Fecha")+ylab("Colgate")+ggtitle("ARIMA: Predicción Colgate") + theme_bw()
fColgate.arima
fCrest.arima<-forecast(fit2)
df_new <- data.frame(value = as.vector(zcrest), time = time(zcrest))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fCrest.arima,alpha=0.4)+xlab("Fecha")+ylab("Crest")+ggtitle("ARIMA: Predicción Crest") + theme_bw()
fCrest.arima
colgate_outlier<-tso(xcolgate, types = c("TC","AO","LS","IO","SLS"))
plot(colgate_outlier)
crest_outlier<-tso(xcrest, types = c("TC", "AO", "LS", "IO","SLS"))
plot(crest_outlier)
crest.m1<-arimax(oCrest, order=c(0,1,1), method= "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
crest.m1
crest.m1$coef
colgate.m1
colgate.m1$coef
crest.m1<-arimax(oCrest, order=c(0,1,1), method= "ML",
xtransf= data.frame(I135=1*(seq(oCrest)==135),
I135=1*(seq(oCrest)==135)),
transfer=list(c(2,0),c(0,0)))
crest.m1
crest.m1$coef
colgate.m1$coef
crest.m1$coef
plot(crest.m1$coef[2:5], type = "h")
plot(colgate.m1$coef[2:5],type="h")
colgate_outlier<-tso(xcolgate, types = c("TC","AO","LS","IO","SLS"))
colgate_outlier<-tso(xcolgate, types = c("TC","AO","LS","IO","SLS"))
plot(colgate_outlier, main="Impulso Colgate")
crest_outlier<-tso(xcrest, types = c("TC", "AO", "LS", "IO","SLS"))
plot(crest_outlier, main="Impulso Crest")
knitr::opts_chunk$set(echo = TRUE)
autoplot(colgate, col="blue") +
ggtitle("Cuota de mercado Colgate") +
xlab("Semana") +
ylab("Cuota de mercado") + theme_bw()
data.original<-read.xlsx("data/data.xlsx")
skim(data.original)
colgate <- ts(data.original$Colgate, start = 1958, frequency = 52)
crest <- ts(data.original$Crest, start = 1958, frequency = 52)
mydata <- ts(data.original[,c(3,4)], start = 1958, frequency = 52)
autoplot(colgate, col="blue") +
ggtitle("Cuota de mercado Colgate") +
xlab("Semana") +
ylab("Cuota de mercado") + theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(skimr)
library(fpp2)
library(ggplot2)
library(zoo)
library(ggfortify)
require(forecast)
require(xts)
data.original<-read.xlsx("data/data.xlsx")
skim(data.original)
colgate <- ts(data.original$Colgate, start = 1958, frequency = 52)
crest <- ts(data.original$Crest, start = 1958, frequency = 52)
mydata <- ts(data.original[,c(3,4)], start = 1958, frequency = 52)
autoplot(colgate, col="blue") +
ggtitle("Cuota de mercado Colgate") +
xlab("Semana") +
ylab("Cuota de mercado") + theme_bw()
colgate <- ts(data.original$Colgate, start = 1958, frequency = 52)
crest <- ts(data.original$Crest, start = 1958, frequency = 52)
autoplot(colgate, col="blue") +
ggtitle("Cuota de mercado Colgate") +
xlab("Semana") +
ylab("Cuota de mercado") + theme_bw()
autoplot(crest, col = "red") +
ggtitle("Cuota mercado Crest") +
xlab("Semana") +
ylab("Cuota de mercado")+theme_bw()
autoplot(mydata, facets = TRUE, xlab = "Fecha",ylab = "Colgate VS Cresta", main = "Cuota de mercado")+theme_bw()
autoplot(mydata, facets = FALSE) +
ggtitle("Cuotas de mercado de Crest y Colgate") +
xlab("Tiempo") +
ylab("Cuota de mercado") +theme_bw()
datos<-read.xlsx("data/data.xlsx")
datos$Date <- as.Date(paste(datos$Year, datos$Week, 1, sep = "-"), "%Y-%U-%u")
