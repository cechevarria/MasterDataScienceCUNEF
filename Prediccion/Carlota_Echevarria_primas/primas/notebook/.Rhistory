ggtsdisplay(diff(diff(zlPrimasNoVida,4),1))
View(diff(zlPrimasVida))
View(zlPrimasVida)
plot(fVidaEts, seasonal= "additive")
lines(window(zPrimasVida),type="o")
lines(fVidaEts$mean,col="red")
plot(fVidaNoEts)
lines(window(zPrimasNoVida),type="o")
lines(fVidaNoEts$mean,col="red")
plot(fVidaEts)
lines(window(zPrimasVida),type="o", seasonal="additive")
lines(fVidaEts$mean,col="red")
plot(fVidaEts)
lines(window(zPrimasVida),type="o")
lines(fVidaEts$mean,col="red")
plot(fVidaNoEts)
lines(window(zPrimasNoVida),type="o")
lines(fVidaNoEts$mean,col="red")
fVidaNoEts <- forecast(modeloEtsNovida, findfrequency(modeloEtsNovida))
modeloEtsNovida<- ets(oNoVida, damped = TRUE)
fVidaNoEts <- forecast.ets(modeloEtsNovida)
summary(fVidaNoEts)
plot(fVidaNoEts)
lines(window(zPrimasNoVida),type="o")
lines(fVidaNoEts$mean,col="red")
fVidaNoEts <- forecast.ts(modeloEtsNovida)
modeloEtsNovida<-ets(oNoVida, damped = TRUE)
fVidaNoEts <- forecast.stlf(modeloEtsNovida)
modeloEtsNovida<-ts(oNoVida, damped = TRUE)
modeloEtsNovida<-ts(oNoVida)
fVidaNoEts <- forecast.ets(modeloEtsNovida)
modeloEtsNovida<-ets(oNoVida, damped = TRUE)
fVidaNoEts <- forecast(modeloEtsNovida)
summary(fVidaNoEts)
ggtsdisplay(diff(diff(zlPrimasVida,4),))
ggtsdisplay(diff(diff(zlPrimasNoVida,4),))
library(readr)
Primas_mapfre <- read.csv("data/Primas_mapfre.csv", header = TRUE,
sep = ";", dec = "," , col_types = cols(Fecha = col_date(format = "%m/%d/%Y")),
trim_ws = TRUE)
library(readr)
Primas_mapfre <- read.csv("data/Primas_mapfre.csv", header = TRUE,
sep = ";", dec = "," )
trim_ws = TRUE)
library(readr)
Primas_mapfre <- read.csv("data/Primas_mapfre.csv", header = TRUE,
sep = ";", dec = "," )
View(Primas_mapfre)
knitr::opts_chunk$set(echo = TRUE)
#Librerias
require(forecast)
require(xts) #Tiene coredata e index (Instante de tiempo por fila)
require(ggplot2)
library(ggfortify) #Plot Monthplot
library(dplyr)
library(readr)
Primas_mapfre <- read.csv("data/Primas_mapfre.csv", header = TRUE,
sep = ";", dec = "," )
View(Primas_mapfre)
primas_vida_<-select(Primas_mapfre,Fecha,Primas_vida)
primas_novida_<-select(Primas_mapfre,Fecha,Primas_no_vida)
primasvida_ts<-ts(primas_vida_$Primas_vida, start = c(2008,1), frequency = 4)
primasnovida_ts<-ts(primas_novida_$Primas_no_vida, start = c(2008,1), frequency = 4)
plot(primasvida_ts, xlab = "Fecha", ylab = "Primas de vida", main = "Evolución", col = "red")
plot(primasnovida_ts, xlab = "Fecha", ylab = "Primas no vida", main = "Evolución", col = "blue")
primasvida_desc <- decompose(primasvida_ts)
primasnovida_desc<-decompose(primasnovida_ts)
plot(primasvida_desc, xlab = "Año", col= "red")
plot(primasnovida_desc, xlab = "Año", col= "blue")
xPrimasVida <-xts((Primas_mapfre$Primas_vida),order.by=as.Date(Primas_mapfre$Fecha,"%m/%d/%Y"),frequency=4)
xPrimasVida <- to.quarterly(xPrimasVida)
xPrimasNoVida <-xts((Primas_mapfre$Primas_no_vida),order.by=as.Date(Primas_mapfre$Fecha,"%m/%d/%Y"),frequency=4)
xPrimasNoVida <- to.quarterly(xPrimasNoVida)
zPrimasVida <-as.zoo(xPrimasVida$xPrimasVida.Close)
zPrimasNoVida <-as.zoo(xPrimasNoVida$xPrimasNoVida.Close)
names(zPrimasVida)<- "Primas de vida"
names(zPrimasNoVida)<- "Primas de no vida"
autoplot(zPrimasVida) + ggtitle("Primas de vida trimestrales")+xlab("Trimestre")+ylab("Primas de vida")
autoplot(zPrimasNoVida) + ggtitle("Primas de  no vida trimestrales")+xlab("Trimestre")+ylab("Primas de no vida")
ggfreqplot(as.ts(zPrimasVida),freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Primas de vida trimestrales")
ggfreqplot(as.ts(zPrimasNoVida),freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Primas de no vida trimestrales")
cOmit = 4
nObsVida = length(zPrimasVida)
nObsNoVida = length(zPrimasNoVida)
oVida <-window(zPrimasVida, start = index(zPrimasVida[1]), end = index(zPrimasVida[nObsVida - cOmit]))
oNoVida <-window(zPrimasNoVida, start = index(zPrimasNoVida[1]), end = index(zPrimasNoVida[nObsNoVida - cOmit]))
modeloEtsvida<- ets(oVida, damped = TRUE)
fVidaEts <- forecast(modeloEtsvida)
summary(fVidaEts)
modeloEtsNovida<-ets(oNoVida, damped = TRUE)
fVidaNoEts <- forecast(modeloEtsNovida)
summary(fVidaNoEts)
matrizVida<-matrix(c(fVidaEts$mean[1:cOmit],zPrimasVida[(nObsVida-cOmit+1):nObsVida]),ncol=2)
matrizNoVida<-matrix(c(fVidaNoEts$mean[1:cOmit],zPrimasNoVida[(nObsNoVida-cOmit+1):nObsNoVida]),ncol=2)
SumaTotal<-matrizVida + matrizNoVida
SumaTotal
plot(fVidaEts)
lines(window(zPrimasVida),type="o")
lines(fVidaEts$mean,col="red")
plot(fVidaNoEts)
lines(window(zPrimasNoVida),type="o")
lines(fVidaNoEts$mean,col="red")
zPrimasVida
zPrimasNoVida
zlPrimasVida=log(zPrimasVida)
df_newlVida <- data.frame(value = as.vector(zlPrimasVida),
time = time(zlPrimasVida))
ggplot(df_newlVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ylab("Ventas")+ggtitle("Ventas Trimestrales de Primas de Vida")+xlab("Trimestres")
zlPrimasNoVida=log(zPrimasNoVida)
df_newlNoVida <- data.frame(value = as.vector(zlPrimasNoVida),
time = time(zlPrimasNoVida))
ggplot(df_newlNoVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ylab("Ventas")+ggtitle("Ventas Trimestrales de Primas de No Vida")+xlab("Trimestres")
ggtsdisplay(zlPrimasVida)
ggtsdisplay(zlPrimasNoVida)
ggtsdisplay(diff(zlPrimasVida))
ggtsdisplay(diff(zlPrimasNoVida))
View(diff(zlPrimasVida))
View(zlPrimasVida)
ggtsdisplay(diff(zlPrimasVida,4))
ggtsdisplay(diff(zlPrimasNoVida,4))
ggtsdisplay(diff(diff(zlPrimasVida,4),))
ggtsdisplay(diff(diff(zlPrimasNoVida,4),))
modelo1ArimaVida <-auto.arima(oVida, lambda = 0)
summary(modelo1ArimaVida)
ggtsdisplay(modelo1ArimaVida$residuals)
ggtsdisplay(diff(zlPrimasVida))
ggtsdisplay(diff(zlPrimasNoVida))
View(fVidaEts)
knitr::opts_chunk$set(echo = TRUE)
#Librerias
require(forecast)
require(xts) #Tiene coredata e index (Instante de tiempo por fila)
require(ggplot2)
library(ggfortify) #Plot Monthplot
library(dplyr)
library(readr)
Primas_mapfre <- read.csv("data/Primas_mapfre.csv", header = TRUE,
sep = ";", dec = "," )
View(Primas_mapfre)
primas_vida_<-select(Primas_mapfre,Fecha,Primas_vida)
primas_novida_<-select(Primas_mapfre,Fecha,Primas_no_vida)
primasvida_ts<-ts(primas_vida_$Primas_vida, start = c(2008,1), frequency = 4)
primasnovida_ts<-ts(primas_novida_$Primas_no_vida, start = c(2008,1), frequency = 4)
plot(primasvida_ts, xlab = "Fecha", ylab = "Primas de vida", main = "Evolución", col = "red")
plot(primasnovida_ts, xlab = "Fecha", ylab = "Primas no vida", main = "Evolución", col = "blue")
primasvida_desc <- decompose(primasvida_ts)
primasnovida_desc<-decompose(primasnovida_ts)
plot(primasvida_desc, xlab = "Año", col= "red")
plot(primasnovida_desc, xlab = "Año", col= "blue")
xPrimasVida <-xts((Primas_mapfre$Primas_vida),order.by=as.Date(Primas_mapfre$Fecha,"%m/%d/%Y"),frequency=4)
xPrimasVida <- to.quarterly(xPrimasVida)
xPrimasNoVida <-xts((Primas_mapfre$Primas_no_vida),order.by=as.Date(Primas_mapfre$Fecha,"%m/%d/%Y"),frequency=4)
xPrimasNoVida <- to.quarterly(xPrimasNoVida)
zPrimasVida <-as.zoo(xPrimasVida$xPrimasVida.Close)
zPrimasNoVida <-as.zoo(xPrimasNoVida$xPrimasNoVida.Close)
names(zPrimasVida)<- "Primas de vida"
names(zPrimasNoVida)<- "Primas de no vida"
autoplot(zPrimasVida) + ggtitle("Primas de vida trimestrales")+xlab("Trimestre")+ylab("Primas de vida")
autoplot(zPrimasNoVida) + ggtitle("Primas de  no vida trimestrales")+xlab("Trimestre")+ylab("Primas de no vida")
ggfreqplot(as.ts(zPrimasVida),freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Primas de vida trimestrales")
ggfreqplot(as.ts(zPrimasNoVida),freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Primas de no vida trimestrales")
cOmit = 4
nObsVida = length(zPrimasVida)
nObsNoVida = length(zPrimasNoVida)
oVida <-window(zPrimasVida, start = index(zPrimasVida[1]), end = index(zPrimasVida[nObsVida - cOmit]))
oNoVida <-window(zPrimasNoVida, start = index(zPrimasNoVida[1]), end = index(zPrimasNoVida[nObsNoVida - cOmit]))
modeloEtsvida<- ets(oVida, damped = TRUE)
fVidaEts <- forecast(modeloEtsvida)
summary(fVidaEts)
modeloEtsNovida<-ets(oNoVida, damped = TRUE)
fVidaNoEts <- forecast(modeloEtsNovida)
summary(fVidaNoEts)
matrizVida<-matrix(c(fVidaEts$mean[1:cOmit],zPrimasVida[(nObsVida-cOmit+1):nObsVida]),ncol=2)
matrizNoVida<-matrix(c(fVidaNoEts$mean[1:cOmit],zPrimasNoVida[(nObsNoVida-cOmit+1):nObsNoVida]),ncol=2)
SumaTotal<-matrizVida + matrizNoVida
SumaTotal
plot(fVidaEts)
lines(window(zPrimasVida),type="o")
lines(fVidaEts$mean,col="red")
plot(fVidaNoEts)
lines(window(zPrimasNoVida),type="o")
lines(fVidaNoEts$mean,col="red")
zlPrimasVida=log(zPrimasVida)
df_newlVida <- data.frame(value = as.vector(zlPrimasVida),
time = time(zlPrimasVida))
ggplot(df_newlVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ylab("Ventas")+ggtitle("Ventas Trimestrales de Primas de Vida")+xlab("Trimestres")
zlPrimasNoVida=log(zPrimasNoVida)
df_newlNoVida <- data.frame(value = as.vector(zlPrimasNoVida),
time = time(zlPrimasNoVida))
ggplot(df_newlNoVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ylab("Ventas")+ggtitle("Ventas Trimestrales de Primas de No Vida")+xlab("Trimestres")
ggtsdisplay(zlPrimasVida)
ggtsdisplay(zlPrimasNoVida)
ggtsdisplay(diff(zlPrimasVida))
ggtsdisplay(diff(zlPrimasNoVida))
modelo1ArimaVida <-auto.arima(oVida, lambda = 0)
summary(modelo1ArimaVida)
ggtsdisplay(modelo1ArimaVida$residuals)
View(primas_vida_)
View(primas_novida_)
View(primas_vida_)
matrizVida<-matrix(c(fVidaEts$mean[1:cOmit],zPrimasVida[(nObsVida-cOmit+1):nObsVida]),ncol=2)
matrizNoVida<-matrix(c(fVidaNoEts$mean[1:cOmit],zPrimasNoVida[(nObsNoVida-cOmit+1):nObsNoVida]),ncol=2)
SumaTotal<-matrizVida + matrizNoVida
SumaTotal
View(xPrimasVida)
View(xPrimasNoVida)
View(Primas_mapfre)
xPrimasVida <-xts((Primas_mapfre$Primas_vida),order.by=as.Date(Primas_mapfre$Fecha,"%m/%d/%Y"),frequency=4)
xPrimasVida <- to.quarterly(xPrimasVida)
xPrimasNoVida <-xts((Primas_mapfre$Primas_no_vida),order.by=as.Date(Primas_mapfre$Fecha,"%m/%d/%Y"),frequency=4)
xPrimasNoVida <- to.quarterly(xPrimasNoVida)
zPrimasVida <-as.zoo(xPrimasVida$xPrimasVida.Close)
zPrimasNoVida <-as.zoo(xPrimasNoVida$xPrimasNoVida.Close)
names(zPrimasVida)<- "Primas de vida"
names(zPrimasNoVida)<- "Primas de no vida"
autoplot(zPrimasVida) + ggtitle("Primas de vida trimestrales")+xlab("Trimestre")+ylab("Primas de vida")
autoplot(zPrimasNoVida) + ggtitle("Primas de  no vida trimestrales")+xlab("Trimestre")+ylab("Primas de no vida")
ggfreqplot(as.ts(zPrimasVida),freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Primas de vida trimestrales")
ggfreqplot(as.ts(zPrimasNoVida),freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Primas de no vida trimestrales")
cOmit = 4
nObsVida = length(zPrimasVida)
nObsNoVida = length(zPrimasNoVida)
oVida <-window(zPrimasVida, start = index(zPrimasVida[1]), end = index(zPrimasVida[nObsVida - cOmit]))
oNoVida <-window(zPrimasNoVida, start = index(zPrimasNoVida[1]), end = index(zPrimasNoVida[nObsNoVida - cOmit]))
modeloEtsvida<- ets(oVida, damped = TRUE)
fVidaEts <- forecast(modeloEtsvida)
summary(fVidaEts)
modeloEtsNovida<-ets(oNoVida, damped = TRUE)
fVidaNoEts <- forecast(modeloEtsNovida)
summary(fVidaNoEts)
matrizVida<-matrix(c(fVidaEts$mean[1:cOmit],zPrimasVida[(nObsVida-cOmit+1):nObsVida]),ncol=2)
```{r}
matrizNoVida<-matrix(c(fVidaNoEts$mean[1:cOmit],zPrimasNoVida[(nObsNoVida-cOmit+1):nObsNoVida]),ncol=2)
SumaTotal<-matrizVida + matrizNoVida
SumaTotal
plot(fVidaEts)
lines(window(zPrimasVida),type="o")
lines(fVidaEts$mean,col="red")
plot(fVidaNoEts)
lines(window(zPrimasNoVida),type="o")
lines(fVidaNoEts$mean,col="red")
plot(fVidaEts)
plot(fVidaNoEts)
plot(fVidaEts)
lines(window(zPrimasVida),type="o")
plot(fVidaEts)
lines(window(zPrimasVida),type="o")
lines(fVidaEts$mean,col="red")
plot(fVidaEts)
lines(fVidaEts$mean,col="red")
```{r}
plot(fVidaEts)
lines(window(zPrimasVida),type="o")
lines(fVidaEts$mean,col="red")
View(xPrimasVida)
plot(fVidaEts)
lines(window(zPrimasVida),type="o")
lines(fVidaEts$mean,col="red")
plot(fVidaNoEts)
lines(window(zPrimasNoVida),type="o")
lines(fVidaNoEts$mean,col="red")
modelo1ArimaVida <-auto.arima(oVida, lambda = 0)
summary(modelo1ArimaVida)
modelo1ArimaNovida<-auto.arima((oNoVida, lambda = 0))
```{r}
modelo1ArimaVida <-auto.arima(oVida, lambda = 0)
summary(modelo1ArimaVida)
modelo1ArimaNovida<-auto.arima(oNoVida, lambda = 0)
summary(modelo1ArimaNovida)
modelo1ArimaNovida<-auto.arima(oNoVida, lambda = 0)
summary(modelo1ArimaNovida)
modelo1ArimaVida <-auto.arima(oVida, lambda = 0)
summary(modelo1ArimaVida)
modelo1ArimaNovida<-auto.arima(oNoVida, lambda = 0)
summary(modelo1ArimaNovida)
ggtsdisplay(modelo1ArimaNoVida$residuals)
modelo1ArimaNoVida<-auto.arima(oNoVida, lambda = 0)
summary(modelo1ArimaNovida)
ggtsdisplay(modelo1ArimaVida$residuals)
ggtsdisplay(modelo1ArimaNoVida$residuals)
Box.test(fit1$residuals,lag=4, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=4, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=8, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=12, fitdf=3, type="Lj")
Box.test(modelo1ArimaNoVida$residuals,lag=4, fitdf=3, type="Lj")
Box.test(modelo1ArimaNoVida$residuals,lag=8, fitdf=3, type="Lj")
Box.test(modelo1ArimaNoVida$residuals,lag=12, fitdf=3, type="Lj")
Box.test(modelo1ArimaNoVida$residuals,lag=4, fitdf=3, type="Lj")
Box.test(modelo1ArimaNoVida$residuals,lag=8, fitdf=3, type="Lj")
Box.test(modelo1ArimaNoVida$residuals,lag=12, fitdf=3, type="Lj")
Box.test(modelo1ArimaNoVida$residuals,lag=24, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=4, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=8, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=12, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=4, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=8, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=12, fitdf=3, type="Lj")
Box.test(modelo1ArimaVida$residuals,lag=24, fitdf=3, type="Lj")
fventas.arima=forecast(modelo1ArimaNoVida)
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas de vida")
ggplot(df_newlVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas de vida")
fprimasvida.arima=forecast(modelo1ArimaNoVida)
fprimasnovida.arima=forecast(modelo1ArimaVida)
ggplot(df_newlVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas de vida")
fprimasvida.arima
ggplot(df_newlVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de Vida")+xlab("Trimestres")
df_newVida<-data.frame(Value=as.vector(zPrimasVida), time = time(zPrimasVida))
ggplot(df_newVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de Vida")
df_newVida<-data.frame(value=as.vector(zPrimasVida), time = time(zPrimasVida))
ggplot(df_newVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de Vida")
fprimasvida.arima
df_newVida<-data.frame(value=as.vector(zPrimasVida), time = time(zPrimasVida))
ggplot(df_newVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de Vida")
fprimasvida.arima
df_newNoVida<-data.frame(value=as.vector(zPrimasNoVida), time = time(zPrimasNoVida))
ggplot(df_newNoVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasNovida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de Vida")
fprimasvida.arima=forecast(modelo1ArimaNoVida)
fprimasNovida.arima=forecast(modelo1ArimaVida)
df_newVida<-data.frame(value=as.vector(zPrimasVida), time = time(zPrimasVida))
ggplot(df_newVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de Vida")
fprimasvida.arima
df_newNoVida<-data.frame(value=as.vector(zPrimasNoVida), time = time(zPrimasNoVida))
ggplot(df_newNoVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasNovida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de Vida")
fprimasvida.arima
df_newVida<-data.frame(value=as.vector(zPrimasVida), time = time(zPrimasVida))
ggplot(df_newVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de Vida")
fprimasvida.arima
df_newNoVida<-data.frame(value=as.vector(zPrimasNoVida), time = time(zPrimasNoVida))
ggplot(df_newNoVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasNovida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de  No Vida")
fprimasvida.arima
ggplot(df_newVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasvida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de Vida")
fprimasvida.arima
df_newNoVida<-data.frame(value=as.vector(zPrimasNoVida), time = time(zPrimasNoVida))
ggplot(df_newNoVida)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+geom_forecast(fprimasNovida.arima,alpha=0.4)+ggtitle("Ventas Trimestrales de Primas de  No Vida")
fprimasNovida.arima
library(readr)
require(forecast)
require(xts)
require(ggplot2)
library(ggfortify)
library(dplyr)
Primas_mapfre <- read.csv(".data/Primas_mapfre.csv", header = TRUE,
sep = ";", dec = "," )
Primas_mapfre <- read.csv("data/Primas_mapfre.csv", header = TRUE,
sep = ";", dec = "," )
View(Primas_mapfre)
library(readr)
require(forecast)
require(xts)
require(ggplot2)
library(ggfortify)
library(dplyr)
Primas_mapfre <- read.csv("data/Primas_mapfre.csv", header = TRUE,
sep = ";", dec = "," )
View(Primas_mapfre)
Primas_mapfre$Suma <- (Primas_mapfre$Primas_vida + Primas_mapfre$Primas_no_vida)
primas_ts <- ts(Primas_mapfre$Suma, start = c(2008,1), frequency = 4)
primas_desc <- decompose(primas_ts)
plot(primas_desc, col = "blue")
#Create a XTS object
#Convert data to XTS
xPrimas = xts(Primas_mapfre$Suma, order.by = as.Date(Primas_mapfre$Fecha,"%m/%d/%Y"),frequency=4)
#Generate quarterly data
xPrimas = to.quarterly(xPrimas)
#Transform to zoo data (forecast package)
zPrimas = as.zoo(xPrimas$xPrimas.Close)
names(zPrimas)="Primas"
##Plot Serie
autoplot(zPrimas)+ggtitle("Primas trimestrales")+xlab("Trimestres")+ylab("Primas")
#Seasonal Plot
ggfreqplot(as.ts(zPrimas),freq=4,nrow=1,facet.labeller=c("1T","2T","3T","4T"))+ggtitle("Primas Trimestrales")
#Select number of observation to compare forecast
cOmit=4
#Data Size
nObs=length(zPrimas)
#sub_sample
#oVentas=zVentas[1:(nObs-cOmit),]
oPrimas <- window(zPrimas,start=index(zPrimas[1]),end=index(zPrimas[nObs-cOmit]))
View(oPrimas)
## Select automatic ETS
etsfit<-ets(oPrimas,damped=TRUE)
#forecast model
fprimas.ets=forecast(etsfit)
#Results
summary(fprimas.ets)
#Plot
plot(fprimas.ets)
lines(window(zPrimas),type="o")
#Actual and Forecast
matrix(c(fprimas.ets$mean[1:cOmit],zPrimas[(nObs-cOmit+1):nObs]),ncol=2)
#Log transformation
zPrimas_log = log(zPrimas)
df_newl <- data.frame(value = as.vector(zPrimas_log),
time = time(zPrimas_log))
ggplot(df_newl)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ylab("Primas")+ggtitle("Modelo ARIMA")+xlab("Años")
#Estacionaria en varianza
ggtsdisplay(zPrimas_log)
#Los ACF y PACF son los gráficos que muestran los residuos.
#Estacionaria en media
ggtsdisplay(diff(zPrimas_log))
fit1=auto.arima(oPrimas,lambda=0)
summary(fit1)
#residual analysis
ggtsdisplay(fit1$residuals)
#El arima lo que me está generando es el modelo sin los residuos (en ACF y PACF) de manera
#automática que estaba obteniendo al tranformar en logaritmo y al realizar la diferencia para
#hacer estacionaria la serie.
#box-Ljung Test
Box.test(fit1$residuals,lag=6, fitdf=3, type="Lj")
Box.test(fit1$residuals,lag=8, fitdf=3, type="Lj")
Box.test(fit1$residuals,lag=12, fitdf=3, type="Lj")
Box.test(fit1$residuals,lag=24, fitdf=3, type="Lj")
fprimas.arima=forecast(fit1)
#Se acepta la hipotesis nula porque nuestro nivel de significación es superior a 0.05. Es decir, a un nivel de confianza de 95% se acepta la hipótesis nula.
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas")
fventas.arima
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas")
fventas.arima
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas")
fventas.arima
```{r}
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas")
fventas.arima
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas")
fventas.arima
plot(primas_desc, col = "green")
plot(primas_desc, col = "black green")
plot(primas_desc, col = "black")
primas_ts <- ts(Primas_mapfre$Suma, start = c(2008,1), frequency = 4)
plot(primas_ts, xlab = "Fecha", ylab= "Suma", main = "Evolución Primas de vida + Primas de no vida", col = "black")
primas_desc <- decompose(primas_ts)
plot(primas_desc, col = "black")
plot(fprimas.ets)
lines(window(zPrimas),type="o")
lines(fprimas.ets$mean,col="red")
6674.6 - 6360.1
6674.6 - 6360.1
6398.6- 5930.371
4913.4-5490.845
5507.2 - 5528.540
ggtsdisplay(zPrimas_log, main = "hola")
#Estacionaria en varianza
ggtsdisplay(zPrimas_log, main = "Serie estacionaria en varianza")
#Los ACF y PACF son los gráficos que muestran los residuos.
#Estacionaria en media
ggtsdisplay(diff(zPrimas_log), main = "Trasa de Variación logarítmica")
#Estacionaria en varianza
ggtsdisplay(zPrimas_log, main = "Logaritmo")
#Los ACF y PACF son los gráficos que muestran los residuos.
ggtsdisplay(diff(zPrimas_log,4))
ggtsdisplay(diff(zPrimas_log,4)1)
ggtsdisplay(diff(zPrimas_log,4),1)
ggtsdisplay(diff(diff(zPrimas_log,4),1)
fit1=auto.arima(oPrimas,lambda=0)
summary(fit1)
ggtsdisplay(fit1$residuals)
#residual analysis
ggtsdisplay(fit1$residuals, main = "residuos del modelo")
fit1=auto.arima(oPrimas,lambda=0)
summary(fit1)
#residual analysis
ggtsdisplay(fit1$residuals, main = "Residuos del modelo")
#El arima lo que me está generando es el modelo sin los residuos (en ACF y PACF) de manera
#automática que estaba obteniendo al tranformar en logaritmo y al realizar la diferencia para
#hacer estacionaria la serie.
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas") + theme_bw()
fventas.arima
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas") + theme_light()
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas") + theme_update()
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas") + theme_bw
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+ggtitle("ARIMA: Predicción Primas") + theme_bw()
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+xlab("Fecha")+ylab("Primas")+ggtitle("ARIMA: Predicción Primas") + theme_bw()
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+xlab("Fecha")+ylab("Primas")+ggtitle("ARIMA: Predicción Primas") + theme_bw()
fventas.arima
6674.6- 5801
6398.6-5179.6
4913.4-4567.6
5507.2-4887.1
fventas.arima
fprimas.arima=forecast(fit1)
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+xlab("Fecha")+ylab("Primas")+ggtitle("ARIMA: Predicción Primas") + theme_bw()
fPRIMAS.arima
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+xlab("Fecha")+ylab("Primas")+ggtitle("ARIMA: Predicción Primas") + theme_bw()
fprimas.arima
6674.6- 6912.2
6398.6-6652.4
4913.4-5814.4
5507.2-6085.5
fprimas.arima=forecast(fit1)
fprimas.arima=forecast(fit1)
df_new <- data.frame(value = as.vector(zPrimas),
time = time(zPrimas))
ggplot(df_new)+geom_point(aes(x=time,y=value))+geom_line(aes(x=time,y=value))+ geom_forecast(fprimas.arima,alpha=0.4)+xlab("Fecha")+ylab("Primas")+ggtitle("ARIMA: Predicción Primas") + theme_bw()
fprimas.arima
